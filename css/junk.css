/*:root {
    --base-hue: 310deg;
    --distance: 90deg;

    --color-a: hsl(var(--base-hue), 100%, 50%);
    --color-b: hsl(calc(var(--base-hue) + var(--distance)), 100%, 50%);
    --color-c: hsl(calc(var(--base-hue) + (var(--distance) * 2)), 100%, 50%);
    --color-d: hsl(calc(var(--base-hue) + (var(--distance) * 3)), 100%, 50%);
    --color-d: hsl(calc(var(--base-hue) + (var(--distance) * 4)), 100%, 50%);
}*/

.Gradient__canvas.isLoaded {
    opacity: 1;
    transition: opacity 1.8s ease-in 50ms;
}

.MktRoot *,
.MktRoot ::after,
.MktRoot ::before {
    box-sizing: border-box;
}

.Gradient__canvas {
    position: relative;
    display: block;
    width: inherit;
    height: 100%;
    opacity: 0;
}

.HomepageHeroGradient {
    --gradientColorZero: #a960ee;
    --gradientColorOne: #ff333d;
    --gradientColorTwo: #90e0ff;
    --gradientColorThree: #ffcb57;
    --gradientColorZeroTransparent: rgba(169, 96, 238, 0);
    --gradientColorOneTransparent: rgba(255, 51, 61, 0);
    --gradientColorTwoTransparent: rgba(144, 224, 255, 0);
    --gradientColorThreeTransparent: rgba(255, 203, 87, 0);
    --gradientAngle: var(--angleStrong);
    --gradientHeight: calc(100% + var(--sectionPaddingTop) + var(--transformOriginX)*var(--sectionAngleSin));
    --offsetX: var(--gutterWidth);
    --transformOriginX: -60px;
    --sectionAngleSin: var(--angleStrongSin);
}

.Gradient.isLoaded::after {
    transition: transform 1s 1s;
    transform: translateX(-50%) scaleY(.995);
}

.MktRoot *,
.MktRoot ::after,
.MktRoot ::before {
    box-sizing: border-box;
}

.Gradient::after {
    content: "";
    z-index: -1;
    position: absolute;
    top: 0;
    left: 50%;
    transform: translateX(-50%);
    min-width: 1000px;
    width: 100%;
    height: 100%;
    background: radial-gradient(var(--gradientColorZero) 40%, var(--gradientColorTwoTransparent) 60%) -620px -180px no-repeat, radial-gradient(var(--gradientColorThree) 33%, var(--gradientColorThreeTransparent) 67%) -120px -24px no-repeat, radial-gradient(var(--gradientColorTwo) 40%, var(--gradientColorTwoTransparent) 70%) -470px 150px no-repeat, var(--gradientColorZero);
}

.HomepageHeroGradient {
    --gradientColorZero: #a960ee;
    --gradientColorOne: #ff333d;
    --gradientColorTwo: #90e0ff;
    --gradientColorThree: #ffcb57;
    --gradientColorZeroTransparent: rgba(169, 96, 238, 0);
    --gradientColorOneTransparent: rgba(255, 51, 61, 0);
    --gradientColorTwoTransparent: rgba(144, 224, 255, 0);
    --gradientColorThreeTransparent: rgba(255, 203, 87, 0);
    --gradientAngle: var(--angleStrong);
    --gradientHeight: calc(100% + var(--sectionPaddingTop) + var(--transformOriginX)*var(--sectionAngleSin));
    --offsetX: var(--gutterWidth);
    --transformOriginX: -60px;
    --sectionAngleSin: var(--angleStrongSin);
}


.Gradient {
    overflow: hidden
}

.Gradient__canvas {
    position: relative;
    display: block;
    width: inherit;
    height: 100%;
    opacity: 0
}

.Gradient__canvas.isLoaded {
    opacity: 1;
    transition: opacity 1.8s ease-in 50ms
}

.Gradient__guides {
    --guideDashedColor: rgba(0, 0, 0, 0.3);
    --guideSolidColor: rgba(0, 0, 0, 0.2);
    mix-blend-mode: soft-light
}

.Gradient:after {
    content: "";
    z-index: -1;
    position: absolute;
    top: 0;
    left: 50%;
    transform: translateX(-50%);
    min-width: 1000px;
    width: 100%;
    height: 100%;
    background: radial-gradient(var(--gradientColorZero) 40%, var(--gradientColorTwoTransparent) 60%) -620px -180px no-repeat, radial-gradient(var(--gradientColorThree) 33%, var(--gradientColorThreeTransparent) 67%) -120px -24px no-repeat, radial-gradient(var(--gradientColorTwo) 40%, var(--gradientColorTwoTransparent) 70%) -470px 150px no-repeat, var(--gradientColorZero)
}

@media (min-width:600px) {
    .Gradient:after {
        background: radial-gradient(var(--gradientColorZero) 40%, var(--gradientColorTwoTransparent) 60%) -420px -180px no-repeat, radial-gradient(var(--gradientColorThree) 23%, var(--gradientColorThreeTransparent) 70%) 240px -24px no-repeat, radial-gradient(var(--gradientColorTwo) 30%, var(--gradientColorTwoTransparent) 70%) -270px 220px no-repeat, var(--gradientColorZero)
    }
}

@media (min-width:900px) {
    .Gradient:after {
        background: radial-gradient(var(--gradientColorThree) 23%, var(--gradientColorThreeTransparent) 67% 100%) 385px -24px, radial-gradient(var(--gradientColorOne) 0, var(--gradientColorOneTransparent) 60% 100%) -940px 290px, radial-gradient(var(--gradientColorTwo) 10%, var(--gradientColorTwoTransparent) 60% 100%) -120px 250px, radial-gradient(var(--gradientColorOne) 40%, var(--gradientColorOneTransparent) 57% 100%) 495px -44px, radial-gradient(var(--gradientColorZero) 30%, var(--gradientColorZeroTransparent) 67% 100%) 122px -120px, radial-gradient(var(--gradientColorZero) 10%, var(--gradientColorZeroTransparent) 60% 100%) -420px 120px, radial-gradient(var(--gradientColorTwo) 15%, var(--gradientColorTwoTransparent) 50% 100%) -620px 0, radial-gradient(var(--gradientColorTwo) 25%, var(--gradientColorTwoTransparent) 50% 100%) 520px -250px, var(--gradientColorZero);
        background-repeat: repeat-y
    }
}

.Gradient.isLoaded:after {
    transition: transform 1s 1s;
    transform: translateX(-50%) scaleY(.995)
}




:root {
    --bs-blue: #0d6efd;
    --bs-indigo: #6610f2;
    --bs-purple: #6f42c1;
    --bs-pink: #d63384;
    --bs-red: #dc3545;
    --bs-orange: #fd7e14;
    --bs-yellow: #ffc107;
    --bs-green: #198754;
    --bs-teal: #20c997;
    --bs-cyan: #0dcaf0;
    --bs-white: #fff;
    --bs-gray: #6c757d;
    --bs-gray-dark: #343a40;
    --bs-gray-100: hsla(210, 16.667%, 97.647%, 1);
    --bs-gray-200: #e9ecef;
    --bs-gray-300: #dee2e6;
    --bs-gray-400: #ced4da;
    --bs-gray-500: #adb5bd;
    --bs-gray-600: #6c757d;
    --bs-gray-700: #495057;
    --bs-gray-800: #343a40;
    --bs-gray-900: #212529;
    --bs-primary: #0d6efd;
    --bs-secondary: #6c757d;
    --bs-success: #198754;
    --bs-info: #0dcaf0;
    --bs-warning: #ffc107;
    --bs-danger: #dc3545;
    --bs-light: #f8f9fa;
    --bs-dark: #212529;

    /*body {
    position: relative;
}*/










    Constraints In general,
    we need to be really careful when setting fixed widths and heights. In the example above,
    setting width: 15rem will,
    in many cases,
    break mobile layouts,
    since it may produce a value too large for its container when the user cranks up their default font size ! We can often mitigate this by clamping it to a maximum of 100%: CSS .button {
        max-width: 100%;
    }

    Similarly,
    when it comes to heights,
    we often want to use min-height instead of height. This allows the container to grow as tall as it needs,
    in order to contain its children. This becomes important when a user scales up their font size,
    since the text will wind up wrapping onto more lines. There's a really interesting trade-off here:

    /*===================================================================================================================================*/
    If we set the width to be 240px,
    the button won't grow with font size, leading to line-wrapping and a taller button.
If we set the width to be 15rem,
    the button will grow wider along with the font size. Which approach is best? Well,
    it depends on the circumstances ! In most cases,
    I think it makes more sense to use rems. This preserves the button's proportions, its aesthetics. And it reduces the risk of an overflow, if the button has a particularly long word. 
In some cases,
    though,
    pixels might be the better option. Maybe if you have a very specific layout in mind,
    and vertical space is more plentiful than horizontal space.
    /*==============================================================================================================================*/
    USING THE REM UNIT FOR VERTIAL MARGIN IS GOOD PRACTICE.
    /*==============================================================================================================================*/

    USING THE REM UNIT FOR MEDIA QUERIES IS ALSO CONSIDERED GOOD PRACTICE.
    /*==============================================================================================================================*/
    I MIGHT USE THE PX UNIT FOR PADDINGS SHA.